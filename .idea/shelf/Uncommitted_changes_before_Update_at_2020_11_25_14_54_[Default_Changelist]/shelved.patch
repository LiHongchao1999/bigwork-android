Index: app/src/main/res/layout/activity_camera2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Camera2Activity\">\r\n\r\n    <com.example.homeworkcorrect.AutoFitTextureView\r\n        android:id=\"@+id/texture\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/takephoto\"\r\n        android:layout_width=\"60dp\"\r\n        android:layout_height=\"60dp\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginLeft=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:layout_marginBottom=\"60dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.814\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:srcCompat=\"@drawable/home_scan\" />\r\n\r\n<!--    <Switch-->\r\n<!--        android:id=\"@+id/change\"-->\r\n<!--        android:layout_width=\"wrap_content\"-->\r\n<!--        android:layout_height=\"wrap_content\"-->\r\n<!--        android:layout_marginTop=\"16dp\"-->\r\n<!--        android:layout_marginEnd=\"32dp\"-->\r\n<!--        android:layout_marginRight=\"32dp\"-->\r\n<!--        android:layout_marginBottom=\"8dp\"-->\r\n<!--        android:text=\"camera\"-->\r\n<!--        app:layout_constraintBottom_toBottomOf=\"@+id/takephoto\"-->\r\n<!--        app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n<!--        app:layout_constraintTop_toTopOf=\"@+id/takephoto\" />-->\r\n\r\n    <RadioGroup\r\n        android:id=\"@+id/flash_rg\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginLeft=\"8dp\"\r\n        android:layout_marginTop=\"28dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/auto\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"自动\"\r\n            tools:layout_editor_absoluteX=\"120dp\"\r\n            tools:layout_editor_absoluteY=\"54dp\" />\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/open\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"打开\" />\r\n\r\n        <RadioButton\r\n            android:id=\"@+id/close\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"关闭\" />\r\n    </RadioGroup>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_camera2.xml	(revision 31f84d158a6fcaddc118c0889b915e2165548079)
+++ app/src/main/res/layout/activity_camera2.xml	(date 1606275687999)
@@ -12,17 +12,37 @@
         android:layout_height="wrap_content"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
-
     <ImageView
+        android:layout_width="60dp"
+        android:layout_height="60dp"
+        android:id="@+id/next"
+        android:src="@drawable/ring"
+        android:layout_marginStart="300dp"
+        android:layout_marginLeft="80dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginRight="8dp"
+        android:layout_marginBottom="60dp"
+
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+
+        app:layout_constraintHorizontal_bias="0.814"
+        app:layout_constraintStart_toStartOf="parent"
+        />
+    <ImageView
+
         android:id="@+id/takephoto"
         android:layout_width="60dp"
         android:layout_height="60dp"
-        android:layout_marginStart="8dp"
-        android:layout_marginLeft="8dp"
+        android:layout_marginStart="160dp"
+        android:layout_marginLeft="80dp"
         android:layout_marginEnd="8dp"
         android:layout_marginRight="8dp"
         android:layout_marginBottom="60dp"
+
+        app:layout_constraintRight_toRightOf="parent"
         app:layout_constraintBottom_toBottomOf="parent"
+
         app:layout_constraintHorizontal_bias="0.814"
         app:layout_constraintStart_toStartOf="parent"
         app:srcCompat="@drawable/home_scan" />
Index: app/src/main/java/com/example/homeworkcorrect/fragment/MyFragmentMainContent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrect.fragment;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.homeworkcorrect.R;\r\n\r\n\r\npublic class MyFragmentMainContent extends Fragment {\r\n    private LinearLayout llcamera;\r\n    private View view;\r\n    private LinearLayout llrecommand;\r\n    private RelativeLayout rlerrors;\r\n    private RelativeLayout rlperson;\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        view=inflater.inflate(R.layout.fragment_mymaincontent,\r\n                container,\r\n                false);\r\n        getViews();\r\n        MyListener listener=new MyListener();\r\n        llcamera.setOnClickListener(listener);\r\n        llrecommand.setOnClickListener(listener);\r\n        rlperson.setOnClickListener(listener);\r\n        rlerrors.setOnClickListener(listener);\r\n        return view;\r\n    }\r\n    public class MyListener implements View.OnClickListener{\r\n\r\n        @Override\r\n        public void onClick(View v) {\r\n            switch(v.getId()){\r\n\r\n            }\r\n        }\r\n    }\r\n    public void getViews(){\r\n       llcamera=view.findViewById(R.id.ll_camera);\r\n       llrecommand=view.findViewById(R.id.ll_recommand);\r\n       rlerrors=view.findViewById(R.id.rl_errors);\r\n       rlperson=view.findViewById(R.id.rl_person);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrect/fragment/MyFragmentMainContent.java	(revision 31f84d158a6fcaddc118c0889b915e2165548079)
+++ app/src/main/java/com/example/homeworkcorrect/fragment/MyFragmentMainContent.java	(date 1606272852108)
@@ -1,5 +1,6 @@
 package com.example.homeworkcorrect.fragment;
 
+import android.content.Intent;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -11,6 +12,8 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
+import com.example.homeworkcorrect.Camera2Activity;
+import com.example.homeworkcorrect.Camera2Activity_ViewBinding;
 import com.example.homeworkcorrect.R;
 
 
@@ -39,7 +42,10 @@
         @Override
         public void onClick(View v) {
             switch(v.getId()){
-
+                case R.id.ll_camera:
+                    Intent intent=new Intent(getContext(), Camera2Activity.class);
+                    startActivity(intent);
+                    break;
             }
         }
     }
Index: app/src/main/java/com/example/homeworkcorrect/Camera2Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrect;\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.ImageFormat;\r\nimport android.graphics.SurfaceTexture;\r\nimport android.hardware.camera2.CameraAccessException;\r\nimport android.hardware.camera2.CameraCaptureSession;\r\nimport android.hardware.camera2.CameraCharacteristics;\r\nimport android.hardware.camera2.CameraDevice;\r\nimport android.hardware.camera2.CameraManager;\r\nimport android.hardware.camera2.CaptureRequest;\r\nimport android.hardware.camera2.TotalCaptureResult;\r\nimport android.hardware.camera2.params.StreamConfigurationMap;\r\nimport android.media.Image;\r\nimport android.media.ImageReader;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.HandlerThread;\r\nimport android.util.Size;\r\nimport android.util.SparseIntArray;\r\nimport android.view.Surface;\r\nimport android.view.TextureView;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.ByteBuffer;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport butterknife.BindView;\r\nimport butterknife.ButterKnife;\r\nimport butterknife.OnClick;\r\n\r\n/**\r\n * @author Marlon\r\n * @desc Camera2Activity 基于Camera2 API 自定义相机\r\n * @date 2018/6/13\r\n */\r\n@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\npublic class Camera2Activity extends AppCompatActivity {\r\n\r\n\r\n    @BindView(R.id.texture)\r\n    AutoFitTextureView texture;\r\n    @BindView(R.id.takephoto)\r\n    ImageView takephoto;\r\n    @BindView(R.id.auto)\r\n    RadioButton auto;\r\n    @BindView(R.id.open)\r\n    RadioButton open;\r\n    @BindView(R.id.close)\r\n    RadioButton close;\r\n    @BindView(R.id.flash_rg)\r\n    RadioGroup flashRg;\r\n\r\n\r\n    /*** 相机管理类*/\r\n    CameraManager mCameraManager;\r\n\r\n\r\n    /*** 指定摄像头ID对应的Camera实体对象*/\r\n    CameraDevice mCameraDevice;\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 预览尺寸\r\n     */\r\n    private Size mPreviewSize;\r\n    private int mSurfaceWidth;\r\n    private int mSurfaceHeight;\r\n\r\n\r\n    /*** 打开摄像头的ID{@link CameraDevice}.*/\r\n    private int mCameraId = CameraCharacteristics.LENS_FACING_FRONT;\r\n\r\n\r\n    /*** 处理静态图像捕获的ImageReader。{@link ImageReader}*/\r\n    private ImageReader mImageReader;\r\n\r\n\r\n    /*** 用于相机预览的{@Link CameraCaptureSession}。*/\r\n    private CameraCaptureSession mCaptureSession;\r\n\r\n\r\n    /*** {@link CaptureRequest.Builder}用于相机预览请求的构造器*/\r\n    private CaptureRequest.Builder mPreviewRequestBuilder;\r\n\r\n\r\n    /***预览请求, 由上面的构建器构建出来*/\r\n    private CaptureRequest mPreviewRequest;\r\n    /**\r\n     * 从屏幕旋转图片转换方向。\r\n     */\r\n    private static final SparseIntArray ORIENTATIONS = new SparseIntArray();\r\n\r\n\r\n    static {\r\n        ORIENTATIONS.append(Surface.ROTATION_0, 90);\r\n        ORIENTATIONS.append(Surface.ROTATION_90, 0);\r\n        ORIENTATIONS.append(Surface.ROTATION_180, 270);\r\n        ORIENTATIONS.append(Surface.ROTATION_270, 180);\r\n    }\r\n\r\n\r\n    /***判断是否支持闪关灯*/\r\n    private boolean mFlashSupported;\r\n\r\n\r\n    /*** 用于运行不应阻塞UI的任务的附加线程。*/\r\n    private HandlerThread mBackgroundThread;\r\n\r\n\r\n    /*** 用于在后台运行任务的{@link Handler}。*/\r\n    private Handler mBackgroundHandler;\r\n\r\n\r\n    /**\r\n     * 文件存储路径\r\n     */\r\n    private File mFile;\r\n    /**\r\n     * 预览请求构建器, 用来构建\"预览请求\"(下面定义的)通过pipeline发送到Camera device\r\n     * 这是{@link ImageReader}的回调对象。 当静止图像准备保存时，将会调用“onImageAvailable”。\r\n     */\r\n    private final ImageReader.OnImageAvailableListener mOnImageAvailableListener\r\n            = new ImageReader.OnImageAvailableListener() {\r\n\r\n\r\n        @Override\r\n        public void onImageAvailable(ImageReader reader) {\r\n            mFile = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES) + \"/\" + new SimpleDateFormat(\"yyyyMMddHHmmss\").format(new Date()) + \".jpg\");\r\n            mBackgroundHandler.post(new ImageSaver(reader.acquireNextImage(), mFile));\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    /*** {@link CameraDevice.StateCallback}打开指定摄像头回调{@link CameraDevice}*/\r\n    private final CameraDevice.StateCallback mStateCallback = new CameraDevice.StateCallback() {\r\n\r\n\r\n        @Override\r\n        public void onOpened(@NonNull CameraDevice cameraDevice) {\r\n            mCameraDevice = cameraDevice;\r\n            createCameraPreview();\r\n        }\r\n\r\n\r\n        @Override\r\n        public void onDisconnected(@NonNull CameraDevice cameraDevice) {\r\n            cameraDevice.close();\r\n            cameraDevice = null;\r\n        }\r\n\r\n\r\n        @Override\r\n        public void onError(@NonNull CameraDevice cameraDevice, int error) {\r\n            cameraDevice.close();\r\n            cameraDevice = null;\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * TextureView 生命周期响应\r\n     */\r\n    private final TextureView.SurfaceTextureListener textureListener = new TextureView.SurfaceTextureListener() {\r\n        @Override //创建\r\n        public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height) {\r\n            //当TextureView创建完成，打开指定摄像头相机\r\n            openCamera(width, height, mCameraId);\r\n        }\r\n\r\n\r\n        @Override //尺寸改变\r\n        public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {\r\n\r\n\r\n        }\r\n\r\n\r\n        @Override //销毁\r\n        public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {\r\n            return false;\r\n        }\r\n\r\n\r\n        @Override //更新\r\n        public void onSurfaceTextureUpdated(SurfaceTexture surface) {\r\n\r\n\r\n        }\r\n    };\r\n    private int CONTROL_AE_MODE;\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 打开指定摄像头ID的相机\r\n     *\r\n     * @param width\r\n     * @param height\r\n     * @param cameraId\r\n     */\r\n    private void openCamera(int width, int height, int cameraId) {\r\n        if (ActivityCompat.checkSelfPermission(Camera2Activity.this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            return;\r\n        }\r\n        try {\r\n            mSurfaceWidth = width;\r\n            mSurfaceHeight = height;\r\n//            getCameraId(cameraId);\r\n            CameraCharacteristics characteristics = mCameraManager.getCameraCharacteristics(mCameraId + \"\");\r\n            StreamConfigurationMap map = characteristics.get(CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);\r\n            // 获取设备方向\r\n            int rotation = getWindowManager().getDefaultDisplay().getRotation();\r\n            int totalRotation = sensorToDeviceRotation(characteristics, rotation);\r\n            boolean swapRotation = totalRotation == 90 || totalRotation == 270;\r\n            int rotatedWidth = mSurfaceWidth;\r\n            int rotatedHeight = mSurfaceHeight;\r\n            if (swapRotation) {\r\n                rotatedWidth = mSurfaceHeight;\r\n                rotatedHeight = mSurfaceWidth;\r\n            }\r\n            // 获取最佳的预览尺寸\r\n            mPreviewSize = getPreferredPreviewSize(map.getOutputSizes(SurfaceTexture.class), rotatedWidth, rotatedHeight);\r\n            if (swapRotation) {\r\n                texture.setAspectRatio(mPreviewSize.getWidth(), mPreviewSize.getHeight());\r\n            } else {\r\n                texture.setAspectRatio(mPreviewSize.getHeight(), mPreviewSize.getWidth());\r\n            }\r\n            if (mImageReader == null) {\r\n                // 创建一个ImageReader对象，用于获取摄像头的图像数据,maxImages是ImageReader一次可以访问的最大图片数量\r\n                mImageReader = ImageReader.newInstance(mPreviewSize.getWidth(), mPreviewSize.getHeight(),\r\n                        ImageFormat.JPEG, 2);\r\n                mImageReader.setOnImageAvailableListener(mOnImageAvailableListener, mBackgroundHandler);\r\n            }\r\n            //检查是否支持闪光灯\r\n            Boolean available = characteristics.get(CameraCharacteristics.FLASH_INFO_AVAILABLE);\r\n            mFlashSupported = available == null ? false : available;\r\n            mCameraManager.openCamera(mCameraId + \"\", mStateCallback, null);\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 设置相机闪关灯模式\r\n     *\r\n     * @param AE_MODE 闪关灯的模式\r\n     * @throws CameraAccessException\r\n     */\r\n    private void setFlashMode(int AE_MODE) {\r\n        if (mFlashSupported) {\r\n            this.CONTROL_AE_MODE = AE_MODE;\r\n            mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AE_MODE, AE_MODE);\r\n            if (AE_MODE == CaptureRequest.CONTROL_AE_MODE_OFF) {\r\n                mPreviewRequestBuilder.set(CaptureRequest.FLASH_MODE, CaptureRequest.FLASH_MODE_OFF);\r\n            }\r\n        }\r\n\r\n\r\n        // 构建上述的请求\r\n        mPreviewRequest = mPreviewRequestBuilder.build();\r\n        // 重复进行上面构建的请求, 用于显示预览\r\n        try {\r\n            mCaptureSession.setRepeatingRequest(mPreviewRequest, null, mBackgroundHandler);\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 创建预览对话\r\n     */\r\n    private void createCameraPreview() {\r\n        try {\r\n            // 获取texture实例\r\n            SurfaceTexture surfaceTexture = texture.getSurfaceTexture();\r\n            assert surfaceTexture != null;\r\n            //我们将默认缓冲区的大小配置为我们想要的相机预览的大小。\r\n            surfaceTexture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());\r\n            // 用来开始预览的输出surface\r\n            Surface surface = new Surface(surfaceTexture);\r\n            //创建预览请求构建器\r\n            mPreviewRequestBuilder = mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);\r\n            //将TextureView的Surface作为相机的预览显示输出\r\n            mPreviewRequestBuilder.addTarget(surface);\r\n            //在这里，我们为相机预览创建一个CameraCaptureSession。\r\n            mCameraDevice.createCaptureSession(Arrays.asList(surface, mImageReader.getSurface()), new CameraCaptureSession.StateCallback() {\r\n\r\n\r\n                        @Override\r\n                        public void onConfigured(@NonNull CameraCaptureSession cameraCaptureSession) {\r\n                            // 相机关闭时, 直接返回\r\n                            if (null == mCameraDevice) {\r\n                                return;\r\n                            }\r\n                            //会话准备就绪后，我们开始显示预览。\r\n                            // 会话可行时, 将构建的会话赋给field\r\n                            mCaptureSession = cameraCaptureSession;\r\n\r\n\r\n                            //相机预览应该连续自动对焦。\r\n                            mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AF_MODE, CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);\r\n                            //设置闪关灯模式\r\n                            setFlashMode(CaptureRequest.CONTROL_AE_MODE_ON_AUTO_FLASH);\r\n                        }\r\n\r\n\r\n                        @Override\r\n                        public void onConfigureFailed(@NonNull CameraCaptureSession cameraCaptureSession) {\r\n                            showToast(\"预览失败了\");\r\n\r\n\r\n                        }\r\n                    }, null\r\n            );\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 拍照时调用方法\r\n     */\r\n    private void captureStillPicture() {\r\n        try {\r\n            if (mCameraDevice == null) {\r\n                return;\r\n            }\r\n            // 创建作为拍照的CaptureRequest.Builder\r\n            mPreviewRequestBuilder = mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_STILL_CAPTURE);\r\n            // 将imageReader的surface作为CaptureRequest.Builder的目标\r\n            mPreviewRequestBuilder.addTarget(mImageReader.getSurface());\r\n/*            // 设置自动对焦模式\r\n            mBuilder.set(CaptureRequest.CONTROL_AF_MODE,\r\n                    CaptureRequest.CONTROL_AF_MODE_CONTINUOUS_PICTURE);\r\n            // 设置自动曝光模式\r\n            mBuilder.set(CaptureRequest.CONTROL_AE_MODE,\r\n                    CaptureRequest.CONTROL_AE_MODE_ON_AUTO_FLASH);*/\r\n            //设置为自动模式\r\n//            mPreviewRequestBuilder.set(CaptureRequest.CONTROL_MODE, CameraMetadata.CONTROL_MODE_AUTO);\r\n\r\n\r\n            setFlashMode(CONTROL_AE_MODE);\r\n            // 停止连续取景\r\n            mCaptureSession.stopRepeating();\r\n            // 捕获静态图像\r\n            mCaptureSession.capture(mPreviewRequestBuilder.build(), new CameraCaptureSession.CaptureCallback() {\r\n                // 拍照完成时激发该方法\r\n                @Override\r\n                public void onCaptureCompleted(CameraCaptureSession session, CaptureRequest request, TotalCaptureResult result) {\r\n                    //重新打开预览\r\n                    //createCameraPreview();\r\n                }\r\n            }, null);\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取设备方向\r\n     *\r\n     * @param characteristics\r\n     * @param deviceOrientation\r\n     * @return\r\n     */\r\n    private static int sensorToDeviceRotation(CameraCharacteristics characteristics, int deviceOrientation) {\r\n        int sensorOrientation = characteristics.get(CameraCharacteristics.SENSOR_ORIENTATION);\r\n        deviceOrientation = ORIENTATIONS.get(deviceOrientation);\r\n        return (sensorOrientation + deviceOrientation + 360) % 360;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取可用设备可用摄像头列表\r\n     */\r\n    private void getCameraId(int ID) {\r\n        try {\r\n            for (String cameraId : mCameraManager.getCameraIdList()) {\r\n                CameraCharacteristics characteristics = mCameraManager.getCameraCharacteristics(cameraId);\r\n                if (characteristics.get(CameraCharacteristics.LENS_FACING) == ID) {\r\n                    continue;\r\n                }\r\n                mCameraId = Integer.valueOf(cameraId);\r\n                return;\r\n            }\r\n        } catch (CameraAccessException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置最佳尺寸\r\n     *\r\n     * @param sizes\r\n     * @param width\r\n     * @param height\r\n     * @return\r\n     */\r\n    private Size getPreferredPreviewSize(Size[] sizes, int width, int height) {\r\n        List<Size> collectorSizes = new ArrayList<>();\r\n        for (Size option : sizes) {\r\n            if (width > height) {\r\n                if (option.getWidth() > width && option.getHeight() > height) {\r\n                    collectorSizes.add(option);\r\n                }\r\n            } else {\r\n                if (option.getHeight() > width && option.getWidth() > height) {\r\n                    collectorSizes.add(option);\r\n                }\r\n            }\r\n        }\r\n        if (collectorSizes.size() > 0) {\r\n            return Collections.min(collectorSizes, new Comparator<Size>() {\r\n                @Override\r\n                public int compare(Size s1, Size s2) {\r\n                    return Long.signum(s1.getWidth() * s1.getHeight() - s2.getWidth() * s2.getHeight());\r\n                }\r\n            });\r\n        }\r\n        return sizes[0];\r\n    }\r\n\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_camera2);\r\n        ButterKnife.bind(this);\r\n        initView();\r\n    }\r\n\r\n\r\n    private void initView() {\r\n        flashRg.setOnCheckedChangeListener((group, checkedId) -> {\r\n            switch (checkedId) {\r\n                case R.id.auto:\r\n                    //自动闪光灯\r\n                    setFlashMode(CaptureRequest.CONTROL_AE_MODE_ON_AUTO_FLASH);\r\n                    break;\r\n                case R.id.open:\r\n                    //开启闪光灯\r\n                    setFlashMode(CaptureRequest.CONTROL_AE_MODE_ON_ALWAYS_FLASH);\r\n                    break;\r\n                case R.id.close:\r\n                    //关闭闪光灯\r\n                    setFlashMode(CaptureRequest.CONTROL_AE_MODE_OFF);\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n\r\n            }\r\n        });\r\n        // 获取CameraManager 相机设备管理器\r\n        mCameraManager = (CameraManager) getSystemService(Context.CAMERA_SERVICE);\r\n    }\r\n\r\n\r\n    /**\r\n     * 初试化拍照线程\r\n     */\r\n    public void startBackgroundThread() {\r\n        mBackgroundThread = new HandlerThread(\"Camera Background\");\r\n        mBackgroundThread.start();\r\n        mBackgroundHandler = new Handler(mBackgroundThread.getLooper());\r\n    }\r\n\r\n\r\n    public void stopBackgroundThread() {\r\n        if (mBackgroundThread != null) {\r\n            mBackgroundThread.quitSafely();\r\n            try {\r\n                mBackgroundThread.join();\r\n                mBackgroundThread = null;\r\n                mBackgroundHandler = null;\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Closes the current {@link CameraDevice}.\r\n     * 关闭正在使用的相机\r\n     */\r\n    private void closeCamera() {\r\n        // 关闭捕获会话\r\n        if (null != mCaptureSession) {\r\n            mCaptureSession.close();\r\n            mCaptureSession = null;\r\n        }\r\n        // 关闭当前相机\r\n        if (null != mCameraDevice) {\r\n            mCameraDevice.close();\r\n            mCameraDevice = null;\r\n        }\r\n        // 关闭拍照处理器\r\n        if (null != mImageReader) {\r\n            mImageReader.close();\r\n            mImageReader = null;\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (texture.isAvailable()) {\r\n            openCamera(texture.getWidth(), texture.getHeight(), mCameraId);\r\n        } else {\r\n            texture.setSurfaceTextureListener(textureListener);\r\n        }\r\n        startBackgroundThread();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        closeCamera();\r\n        stopBackgroundThread();\r\n        super.onPause();\r\n    }\r\n\r\n\r\n    @OnClick(R.id.takephoto)\r\n    public void onViewClicked() {\r\n        captureStillPicture();\r\n    }\r\n\r\n\r\n    /**\r\n     * Shows a {@link Toast} on the UI thread.\r\n     * 在UI上显示Toast的方法\r\n     *\r\n     * @param text The message to show\r\n     */\r\n    /**\r\n     * Shows a {@link Toast} on the UI thread.\r\n     * 在UI上显示Toast的方法\r\n     *\r\n     * @param text The message to show\r\n     */\r\n    private void showToast(final String text) {\r\n        runOnUiThread(() -> Toast.makeText(Camera2Activity.this, text, Toast.LENGTH_SHORT).show());\r\n    }\r\n\r\n\r\n    /**\r\n     * Saves a JPEG {@link Image} into the specified {@link File}.\r\n     * 保存图片到自定目录\r\n     * 保存jpeg到指定的文件夹下, 开启子线程执行保存操作\r\n     */\r\n    private static class ImageSaver implements Runnable {\r\n\r\n\r\n        /**\r\n         * The JPEG image\r\n         * 要保存的图片\r\n         */\r\n        private final Image mImage;\r\n        /**\r\n         * The file we save the image into.\r\n         * 图片存储的路径\r\n         */\r\n        private final File mFile;\r\n\r\n\r\n        ImageSaver(Image image, File file) {\r\n            mImage = image;\r\n            mFile = file;\r\n        }\r\n\r\n\r\n        @Override\r\n        public void run() {\r\n            ByteBuffer buffer = mImage.getPlanes()[0].getBuffer();\r\n            byte[] bytes = new byte[buffer.remaining()];\r\n            buffer.get(bytes);\r\n            FileOutputStream output = null;\r\n            try {\r\n                output = new FileOutputStream(mFile);\r\n                output.write(bytes);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                mImage.close();\r\n                if (null != output) {\r\n                    try {\r\n                        output.close();\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrect/Camera2Activity.java	(revision 31f84d158a6fcaddc118c0889b915e2165548079)
+++ app/src/main/java/com/example/homeworkcorrect/Camera2Activity.java	(date 1606284644806)
@@ -259,6 +259,7 @@
                 mImageReader = ImageReader.newInstance(mPreviewSize.getWidth(), mPreviewSize.getHeight(),
                         ImageFormat.JPEG, 2);
                 mImageReader.setOnImageAvailableListener(mOnImageAvailableListener, mBackgroundHandler);
+
             }
             //检查是否支持闪光灯
             Boolean available = characteristics.get(CameraCharacteristics.FLASH_INFO_AVAILABLE);
Index: app/src/main/java/com/example/homeworkcorrect/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrect;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentTabHost;\r\n\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TabHost;\r\nimport android.widget.TextView;\r\nimport com.example.homeworkcorrect.fragment.MyFragment;\r\nimport com.example.homeworkcorrect.fragment.OnlineShopFragment;\r\nimport com.example.homeworkcorrect.fragment.ParentCircleFragment;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private Map<String, ImageView> imageViewMap = new HashMap<>();\r\n    private Map<String, TextView> textViewMap = new HashMap<>();\r\n    private String userName;\r\n    private String demo;\r\n    private String userName1;\r\n    private String demo1;\r\n    private String key;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        //获取FragmentTabHost的引用\r\n        FragmentTabHost fragmentTabHost = findViewById(android.R.id.tabhost);\r\n        //初始化\r\n\r\n        fragmentTabHost.setup(this,\r\n                getSupportFragmentManager(),//管理多个Fragment对象的管理器\r\n                android.R.id.tabcontent);//显示内容页面的控件的id\r\n\r\n\r\n        //创建内容页面TabSpec对象\r\n        TabHost.TabSpec tab1 = fragmentTabHost.newTabSpec(\"first_tab\")\r\n                .setIndicator(getTabSpecView(\"first_tab\",\"主页\",R.drawable.main1));\r\n        //Class参数：类名.class,对象.getClass()\r\n        fragmentTabHost.addTab(tab1,\r\n                MyFragment.class,//FristFragment类的Class（字节码）对象\r\n                null);//传递数据时使用，不需要传递数据直接传null\r\n\r\n\r\n        //创建内容页面TabSpec对象\r\n        TabHost.TabSpec tab2 = fragmentTabHost.newTabSpec(\"second_tab\")\r\n                .setIndicator(getTabSpecView(\"second_tab\",\"商城\",R.drawable.shop));\r\n        //Class参数：类名.class,对象.getClass()\r\n        fragmentTabHost.addTab(tab2,\r\n                OnlineShopFragment.class,//FristFragment类的Class（字节码）对象\r\n                null);//传递数据时使用，不需要传递数据直接传null\r\n\r\n\r\n        //创建内容页面TabSpec对象\r\n        TabHost.TabSpec tab3 = fragmentTabHost.newTabSpec(\"third_tab\")\r\n                .setIndicator(getTabSpecView(\"third_tab\",\"作业\",R.drawable.assignment));\r\n        //Class参数：类名.class,对象.getClass()\r\n        fragmentTabHost.addTab(tab3,\r\n                MyFragment.class,//FristFragment类的Class（字节码）对象\r\n                null);//传递数据时使用，不需要传递数据直接传null\r\n\r\n\r\n        //创建内容页面TabSpec对象\r\n        TabHost.TabSpec tab4 = fragmentTabHost.newTabSpec(\"forth_tab\")\r\n                .setIndicator(getTabSpecView(\"forth_tab\",\"家长圈\",R.drawable.friend));\r\n        //Class参数：类名.class,对象.getClass()\r\n        fragmentTabHost.addTab(tab4,\r\n                ParentCircleFragment.class,//FristFragment类的Class（字节码）对象\r\n                null);//传递数据时使用，不需要传递数据直接传null\r\n\r\n\r\n        //创建内容页面TabSpec对象\r\n        TabHost.TabSpec tab5 = fragmentTabHost.newTabSpec(\"fifth_tab\")\r\n                .setIndicator(getTabSpecView(\"fifth_tab\",\"我的\",R.drawable.my));\r\n        //Class参数：类名.class,对象.getClass()\r\n        fragmentTabHost.addTab(tab5,\r\n                MyFragment.class,//FristFragment类的Class（字节码）对象\r\n                null);//传递数据时使用，不需要传递数据直接传null\r\n\r\n\r\n        //处理fragmentTabHost的选项切换事件\r\n        fragmentTabHost.setOnTabChangedListener(new TabHost.OnTabChangeListener() {\r\n            @Override\r\n            public void onTabChanged(String tabId) {\r\n                //修改图片和文字的颜色\r\n                switch (tabId){\r\n                    case \"first_tab\"://选中了短信\r\n                        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main1);\r\n                        textViewMap.get(\"first_tab\").setTextColor(Color.rgb(240,128,128));\r\n                        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop);\r\n                        textViewMap.get(\"second_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment);\r\n                        textViewMap.get(\"third_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friend);\r\n                        textViewMap.get(\"forth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my);\r\n                        textViewMap.get(\"fifth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        break;\r\n                    case \"second_tab\"://选中了联系人\r\n                        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main);\r\n                        textViewMap.get(\"first_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop1);\r\n                        textViewMap.get(\"second_tab\").setTextColor(Color.rgb(240,128,128));\r\n                        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment);\r\n                        textViewMap.get(\"third_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friend);\r\n                        textViewMap.get(\"forth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my);\r\n                        textViewMap.get(\"fifth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        break;\r\n                    case \"third_tab\"://选中了短信\r\n                        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main);\r\n                        textViewMap.get(\"first_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop);\r\n                        textViewMap.get(\"second_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment1);\r\n                        textViewMap.get(\"third_tab\").setTextColor(Color.rgb(240,128,128));\r\n                        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friend);\r\n                        textViewMap.get(\"forth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my);\r\n                        textViewMap.get(\"fifth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        break;\r\n                    case \"forth_tab\"://选中了联系人\r\n                        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main);\r\n                        textViewMap.get(\"first_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop);\r\n                        textViewMap.get(\"second_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment);\r\n                        textViewMap.get(\"third_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friends1);\r\n                        textViewMap.get(\"forth_tab\").setTextColor(Color.rgb(240,128,128));\r\n                        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my);\r\n                        textViewMap.get(\"fifth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        break;\r\n                    case \"fifth_tab\"://选中了短信\r\n                        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main);\r\n                        textViewMap.get(\"first_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop);\r\n                        textViewMap.get(\"second_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment);\r\n                        textViewMap.get(\"third_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friend);\r\n                        textViewMap.get(\"forth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n                        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my1);\r\n                        textViewMap.get(\"fifth_tab\").setTextColor(Color.rgb(240,128,128));\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n\r\n        //设置默认选中的标签页:参数是下标\r\n        fragmentTabHost.setCurrentTab(0);\r\n        imageViewMap.get(\"first_tab\").setImageResource(R.drawable.main1);\r\n        textViewMap.get(\"first_tab\").setTextColor(Color.rgb(240,128,128));\r\n        imageViewMap.get(\"second_tab\").setImageResource(R.drawable.shop);\r\n        textViewMap.get(\"second_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n        imageViewMap.get(\"third_tab\").setImageResource(R.drawable.assignment);\r\n        textViewMap.get(\"third_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n        imageViewMap.get(\"forth_tab\").setImageResource(R.drawable.friend);\r\n        textViewMap.get(\"forth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n        imageViewMap.get(\"fifth_tab\").setImageResource(R.drawable.my);\r\n        textViewMap.get(\"fifth_tab\").setTextColor(getResources().getColor(android.R.color.black));\r\n    }\r\n    public View getTabSpecView(String tag, String tilte, int drawable){\r\n        View view = getLayoutInflater().inflate(R.layout.tab_spec_layout,null);\r\n\r\n        //获取tab_spec_layout布局当中视图控件的引用\r\n        ImageView icon = view.findViewById(R.id.icon);\r\n        icon.setImageResource(drawable);\r\n\r\n        //将ImageView对象存储到Map中\r\n        imageViewMap.put(tag,icon);\r\n\r\n        TextView tvTitle = view.findViewById(R.id.title);\r\n        tvTitle.setText(tilte);\r\n\r\n        textViewMap.put(tag,tvTitle);\r\n\r\n        return view;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrect/MainActivity.java	(revision 31f84d158a6fcaddc118c0889b915e2165548079)
+++ app/src/main/java/com/example/homeworkcorrect/MainActivity.java	(date 1606272759472)
@@ -10,6 +10,7 @@
 import android.widget.TabHost;
 import android.widget.TextView;
 import com.example.homeworkcorrect.fragment.MyFragment;
+import com.example.homeworkcorrect.fragment.MyFragmentMainContent;
 import com.example.homeworkcorrect.fragment.OnlineShopFragment;
 import com.example.homeworkcorrect.fragment.ParentCircleFragment;
 import java.util.HashMap;
@@ -42,7 +43,7 @@
                 .setIndicator(getTabSpecView("first_tab","主页",R.drawable.main1));
         //Class参数：类名.class,对象.getClass()
         fragmentTabHost.addTab(tab1,
-                MyFragment.class,//FristFragment类的Class（字节码）对象
+                MyFragmentMainContent.class,//FristFragment类的Class（字节码）对象
                 null);//传递数据时使用，不需要传递数据直接传null
 
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.homeworkcorrect\">\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_CONTACTS\"/>\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.camera.autofocus\" />\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".Camera2Activity\">\r\n\r\n        </activity>\r\n        <activity android:name=\".SettingActivity\" />\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 31f84d158a6fcaddc118c0889b915e2165548079)
+++ app/src/main/AndroidManifest.xml	(date 1606286700195)
@@ -10,6 +10,7 @@
     <uses-feature android:name="android.hardware.camera" />
     <application
         android:allowBackup="true"
+        android:requestLegacyExternalStorage="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020_11_23_19_11__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020_11_23_19_11__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020_11_23_16_41__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020_11_23_16_41__Default_Changelist_.xml
